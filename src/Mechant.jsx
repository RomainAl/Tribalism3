/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: bensimulator2 (https://sketchfab.com/bensimulator1)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/kong-2021-animated-run-a75d91ceeba4440981d488cf1e670773
Title: kong-2021-animated-run
*/

import { useAnimations, useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { CylinderCollider, RigidBody } from "@react-three/rapier";
import { useEffect, useMemo, useRef } from "react";
import * as THREE from "three";

export function Mechant({ size }) {
  const group = useRef();
  const group2 = useRef();
  const refKingKong = useRef();
  const direction = useMemo(() => new THREE.Vector3(), []);
  const { nodes, materials, animations } = useGLTF("./Mechant01.glb");
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    actions.walk_scepter.play();
  }, [actions]);

  useFrame((state) => {
    state.camera.getWorldDirection(direction);
    // console.log(direction);
    // direction.y = 0;
    direction.normalize();
    // const dir = direction.multiplyScalar(1).round()

    if (refKingKong.current) {
      const vec = new THREE.Vector3(
        state.camera.position.clone().add(direction.multiplyScalar(1.5)).x - refKingKong.current.translation().x,
        0,
        state.camera.position.clone().add(direction.multiplyScalar(1.5)).z - refKingKong.current.translation().z
      );
      if (vec.length() > 0.3) {
        refKingKong.current.setLinvel(vec.normalize().multiplyScalar(0.5), false);
        if (vec.x > 0) {
          group2.current.rotation.y = vec.angleTo(new THREE.Vector3(0, 0, 1));
        } else {
          group2.current.rotation.y = -vec.angleTo(new THREE.Vector3(0, 0, 1));
        }
      }
    }
  });

  const collisionEnter = (e) => {
    console.log(e);
    if (e.colliderObject.name === "character-capsule-collider") {
      actions.walk_scepter.stop();
      actions.attack4.play();
    }
  };

  const collisionExit = (e) => {
    if (e.colliderObject.name === "character-capsule-collider") {
      actions.attack4.stop();
      actions.walk_scepter.play();
    }
  };

  return (
    <RigidBody
      ref={refKingKong}
      type="kinematicVelocity"
      colliders={false}
      position={[0, 0.1, -50]}
      onCollisionEnter={collisionEnter}
      onCollisionExit={collisionExit}
    >
      <group ref={group} dispose={null}>
        <group ref={group2} name="Sketchfab_Scene" scale={0.0004} position={[0, -1, 0]}>
          <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
            <group name="root">
              <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
                <group name="king_kongqc_skeleton_93">
                  <group name="GLTF_created_0">
                    <primitive object={nodes.GLTF_created_0_rootJoint} />
                    <skinnedMesh
                      name="Object_7"
                      geometry={nodes.Object_7.geometry}
                      material={materials.King_Kong_D}
                      skeleton={nodes.Object_7.skeleton}
                    />
                    <skinnedMesh
                      name="Object_8"
                      geometry={nodes.Object_8.geometry}
                      material={materials.King_Kong_Fur}
                      skeleton={nodes.Object_8.skeleton}
                    />
                    <skinnedMesh
                      name="Object_10"
                      geometry={nodes.Object_10.geometry}
                      material={materials.King_Kong_Fur}
                      skeleton={nodes.Object_10.skeleton}
                    />
                    <skinnedMesh
                      name="Object_12"
                      geometry={nodes.Object_12.geometry}
                      material={materials.King_Kong_Fur}
                      skeleton={nodes.Object_12.skeleton}
                    />
                    <skinnedMesh
                      name="Object_14"
                      geometry={nodes.Object_14.geometry}
                      material={materials.King_Kong_Fur}
                      skeleton={nodes.Object_14.skeleton}
                    />
                    <skinnedMesh
                      name="Object_16"
                      geometry={nodes.Object_16.geometry}
                      material={materials.King_Kong_Fur}
                      skeleton={nodes.Object_16.skeleton}
                    />
                    <skinnedMesh
                      name="Object_18"
                      geometry={nodes.Object_18.geometry}
                      material={materials.King_Kong_Fur}
                      skeleton={nodes.Object_18.skeleton}
                    />
                    <skinnedMesh
                      castShadow
                      receiveShadow
                      name="Object_20"
                      geometry={nodes.Object_20.geometry}
                      material={materials.King_Kong_Arms_D}
                      skeleton={nodes.Object_20.skeleton}
                    />
                    <skinnedMesh
                      name="Object_21"
                      geometry={nodes.Object_21.geometry}
                      material={materials.King_Kong_D}
                      skeleton={nodes.Object_21.skeleton}
                    />
                    <group name="body1_model0_86" />
                    <group name="body2_model0_87" />
                    <group name="body3_model0_88" />
                    <group name="body4_model0_89" />
                    <group name="body5_model0_90" />
                    <group name="body6_model0_91" />
                    <group name="King_Kong_Legendary_2021_92" />
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
      <CylinderCollider args={[1, 1]} />
    </RigidBody>
  );
}

useGLTF.preload("./Mechant01.glb");
